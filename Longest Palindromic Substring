class Solution {
public:
    string expand_from_center(int left, int right , string s , int n) {

        while (left >= 0 && right < n && s[left] == s[right]) {
            left--;
            right++;
        }
      
        return s.substr(left+1, right - left-1);
    }

    string longestPalindrome(string s) {

        int n = s.size();
        string max_str = s.substr(0, 1);

        for (int i = 0; i < n; i++) {
            string odd = expand_from_center(i, i , s , n);
            string even = expand_from_center(i, i + 1 , s , n);

            if (odd.size() > max_str.size()) {
                max_str = odd;
            }

            if (even.size() > max_str.size()) {
                max_str = even;
            }
        }

        return max_str;
    }
};
